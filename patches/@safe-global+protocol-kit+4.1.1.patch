diff --git a/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js b/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js
index 1984a8f..341b27b 100644
--- a/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js
+++ b/node_modules/@safe-global/protocol-kit/dist/src/contracts/utils.js
@@ -16,6 +16,8 @@ const safeDeploymentContracts_1 = require("../contracts/safeDeploymentContracts"
 exports.PREDETERMINED_SALT_NONCE = '0xb1073742015cbcf5a3a4d9d1ae33ecf619439710b89475f92e2abd2117e90f90';
 const ZKSYNC_MAINNET = 324n;
 const ZKSYNC_TESTNET = 280n;
+const ABSTRACT = 2741n;
+const ABSTRACT_SEPOLIA = 11124n;
 // For bundle size efficiency we store SafeProxy.sol/GnosisSafeProxy.sol zksync bytecode hash in hex.
 // To get the values below we need to:
 // 1. Compile Safe smart contracts for zksync
@@ -165,7 +167,7 @@ async function predictSafeAddress({ safeProvider, chainId, safeAccountConfig, sa
     const input = safeProvider.encodeParameters(['address'], [await safeContract.getAddress()]);
     const from = await safeProxyFactoryContract.getAddress();
     // On the zkSync Era chain, the counterfactual deployment address is calculated differently
-    const isZkSyncEraChain = [ZKSYNC_MAINNET, ZKSYNC_TESTNET].includes(chainId);
+    const isZkSyncEraChain = [ZKSYNC_MAINNET, ZKSYNC_TESTNET, ABSTRACT, ABSTRACT_SEPOLIA].includes(chainId);
     if (isZkSyncEraChain) {
         const proxyAddress = zkSyncEraCreate2Address(from, safeVersion, salt, input);
         return safeProvider.getChecksummedAddress(proxyAddress);
diff --git a/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js b/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js
index 00ae69d..16fc950 100644
--- a/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js
+++ b/node_modules/@safe-global/protocol-kit/dist/src/utils/eip-3770/config.js
@@ -61,6 +61,8 @@ exports.networks = [
     { chainId: 280n, shortName: 'zksync-goerli' },
     { chainId: 282n, shortName: 'zkTCRO' },
     { chainId: 288n, shortName: 'boba' },
+    { chainId: 2741, shortName: 'abstract' },
+    { chainId: 11124, shortName: 'abstract-sepolia' },
     { chainId: 291n, shortName: 'orderly' },
     { chainId: 300n, shortName: 'ogn' },
     { chainId: 314n, shortName: 'filecoin' },
